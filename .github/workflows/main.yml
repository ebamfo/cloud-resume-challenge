name: CRC Pull Request Flow
on:
  pull_request:
    branches:
      - main
    ##Pull request with changes to crc-code directory only
    paths:
      - 'crc-code/**'
      - '!crc-iac-azure/**'
      - '!crc-iac-azure-test/**'

jobs:
  create-test-infra:
    runs-on: ubuntu-latest
    outputs:
      rg_name: ${{ steps.rg_name.outputs.RGNAME }}
      app_name: ${{ steps.app_name.outputs.APP_NAME }}
      api_endpoint: ${{ steps.api_endpoint.outputs.API_ENDPOINT }}
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_CRC }}
          ##Directory with terraform infrastructure
      - name: Installing Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: TRUE

      - name: Changing directory to crc-iac-azure-test
        run:  cd crc-iac-azure-test

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform fmt -check  

      - name: Deploying Terraform Infrastructure
        run: |
              terraform init
              terraform apply -auto-approve
      - name: Getting Resource Group Name
        id: rg_name
        run: echo "RGNAME=$( terraform output rgname )" >> "$GITHUB_OUTPUT"
      - name: Getting Function App Name
        id: app_name
        run: echo "APP_NAME=$(v terraform output appname )" >> "$GITHUB_OUTPUT"
      - name: Getting API for updating database
        id: api_endpoint
        run: echo "API_ENDPOINT=$( terraform output api-endpoint )" >> "$GITHUB_OUTPUT"


  deploy-azure-api-merge-request:
    needs: create-test-infra
    runs-on: ubuntu-latest

    ##If env does not work here, move it to just before the azure command
    env:
      RG_NAME: ${{ needs.create-test-infra.outputs.rg_name }}
      APP_NAME: ${{ needs.create-test-infra.outputs.app_name }}
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_CRC }}
      
          #Directory with code to be tested
      - name: changing directory to crc-code
        run: cd crc-code
      - name: installing zip and zipping function
        run: |
              apt-install zip -y
              zip -rv crc_code_test.zip .  
      - name: deploy zipped file to azure
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az webapp deployment source config-zip --resource-group $RG_NAME --name $APP_NAME --src crc_code_test.zip
  
  cypress-api-endpoint-test:
    needs: deploy-azure-api-merge-request
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Changing directory to cypress test directory
        run: cd cypress-test
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          spec: cypress/e2e/apitest.cy.js
        env:
          CYPRESS_API_ENDPOINT: ${{ needs.create-test-infra.outputs.api_endpoint }}

  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: cypress-api-endpoint-test
    
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_CRC }}
      - name: Deleting Resource group after merge
        env:
          RG_NAME: ${{ needs.create-test-infra.outputs.rg_name }}
        run: az group delete --name $RG_NAME -y
        
          
            
              

      


        

            


