name: CRC Pull Request Flow
on:
  pull_request:
    branches:
      - main
    ##Pull request with changes to crc-code directory only
    paths:
      - 'crc-code/**'
      - '!crc-iac-azure/**'
      - '!crc-iac-azure-test/**'

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  PYTHON_VERSION: '3.9' # set this to the python version to use (supports 3.6, 3.7, 3.8)

jobs:
  create-test-infra:
    runs-on: ubuntu-latest
    outputs:
      rg_name: ${{ steps.terraform-output.outputs.RGNAME }}
      app_name: ${{ steps.terraform-output.outputs.APP_NAME }}
      api_endpoint: ${{ steps.terraform-output.outputs.API_ENDPOINT }}
    steps:
        
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_CRC }}
          ##Directory with terraform infrastructure
      - name: Installing Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false 

        ##Intialise, format code and deploy terraform infra
      - name: Terraform init
        run: terraform init -upgrade
        working-directory: ./crc-iac-azure-test/

      - name: Terraform apply
        run: terraform apply -auto-approve
        working-directory: ./crc-iac-azure-test/
        
          
      - name: Terraform Outputs
        id: terraform-output
        run: |
         echo "RGNAME=$(terraform output -raw rgname)" >> $GITHUB_OUTPUT
         echo "APP_NAME=$(terraform output -raw appname)" >> $GITHUB_OUTPUT
         echo "API_ENDPOINT=$(terraform output -raw api-endpoint)" >> $GITHUB_OUTPUT
             
        ##Delete Infrastructure on failure
      - name: Delete terraform infra on failure
        run: |
             terraform destroy -auto-approve
        working-directory: ./crc-iac-azure-test/
        if: ${{ failure() }}
        


  deploy-azure-api-merge-request:
    needs: create-test-infra
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./crc-code/
    env:
        RG_NAME: ${{ needs.create-test-infra.outputs.rg_name }}
        APP_NAME: ${{ needs.create-test-infra.outputs.app_name }}
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_CRC }}
      
      - name: installing zip and zipping function
        run: |
              sudo apt-get install zip -y
              zip -rv crc_code_test.zip . 
              
      - name: echo test 
        run:  echo $RG_NAME $APP_NAME

      - name: deploy zipped file to azure
        uses: azure/CLI@v1
        env:
          RG_NAME: ${{ needs.create-test-infra.outputs.rg_name }}
          APP_NAME: ${{ needs.create-test-infra.outputs.app_name }}
        with:
          inlineScript: |
            az webapp deployment source config-zip --resource-group $RG_NAME --name $APP_NAME --src crc_code_test.zip

      - name: Deleting infrastructure on failure
        uses: azure/CLI@v1
        env:
          RG_NAME: ${{ needs.create-test-infra.outputs.rg_name }}
        with:
          inlineScript: |
            az group delete -n $RG_NAME -y
        if: ${{ failure() }}
  
  cypress-api-endpoint-test:
    needs: [deploy-azure-api-merge-request, create-test-infra]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cypress-test/
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_CRC }}

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          spec: cypress/e2e/apitest.cy.js
        env:
          CYPRESS_API_ENDPOINT: ${{ needs.create-test-infra.outputs.api_endpoint }}

      - name: Deleting infrastructure on failure
        uses: azure/CLI@v1
        env:
          RG_NAME: ${{ needs.create-test-infra.outputs.rg_name }}
        with:
          inlineScript: |
            az group delete --name ${{ env.RG_NAME }} -y
        if: ${{ failure() }}

  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: [cypress-api-endpoint-test, create-test-infra]
        
    steps:
      - uses: actions/checkout@v3
      
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_CRC }}

      - name: installing zip and zipping function
        run: |
              apt-install zip -y
              zip -rv crc_code_test.zip .
        working-directory: ./crc-code/

      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        id: deploy-to-function
        with:
          app-name: 'func-pers-prod-01'
          slot-name: 'production'
          package: './crc_code_test.zip'
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
          scm-do-build-during-deployment: true
          enable-oryx-build: true
        
      - uses: azure/CLI@v1
        env:
          RG_NAME: ${{ needs.create-test-infra.outputs.rg_name }}
        with:
          inlineScript: |
            az group delete --name ${{ env.RG_NAME }} -y
        if: ${{ always() }}
        
    
        
          
            
              

      


        

            


